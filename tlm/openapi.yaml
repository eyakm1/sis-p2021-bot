openapi: 3.0.0
info:
  title: "TLM API"
  description: "API for Task Lifecycle Manager"
  version: 0.3.0
components:
  schemas:
    SubmissionStatus:
      type: "string"
      enum:
        - "unassigned"
        - "assigned"
        - "closed"
    DatabaseId:
      type: "integer"
      description: "Database id"
    TelegramMessage:
      properties:
        chat_id:
          type: "integer"
        message_id:
          type: "integer"
    Submission:
      properties:
        id:
          $ref: "#/components/schemas/DatabaseId"
        cid:
          type: "integer"
          description: "Contest id"
        rid:
          type: "integer"
          description: "Run id"
        login:
          type: "integer"
          description: "Student login"
        problem:
          type: "string"
          description: "Problem name"
        chat_id:
          type: "integer"
          description: "Telegram chat id of group or chat with assigned reviewer"
        link:
          type: "string"
          description: "Link to submission review page"
        status:
          $ref: "#/components/schemas/SubmissionStatus"
paths:
  /submissions:
    post:
      summary: "Add scraped submissions that need to be processed to the queue"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  cid:
                    type: "integer"
                    description: "Contest id"
                  rid:
                    type: "integer"
                    description: "Run id"
                  login:
                    type: "string"
                    description: "Student login"
                  problem:
                    type: "string"
                    description: "Problem name"
                  link:
                    type: "string"
                    description: "Link to submission review page"
      responses:
        '200':
          description: "OK"
        '400':
          description: "Login or problem name too long"
  /waiting:
    get:
      summary: "Get waiting for sending submissions"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Submission"
  /to_delete:
    get:
      summary: "Get submissions that need to be reactualized in Telegram chat"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      $ref: "#/components/schemas/DatabaseId"
                    tg_msg:
                      $ref: "#/components/schemas/TelegramMessage"
  /contests:
    get:
      summary: "get contests to be scraped"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: "integer"
  /submissions/{submission_id}/confirm/send:
    put:
      summary: "Confirm that the message in Telegram with given submission was sent"
      parameters:
        - in: path
          name: submission_id
          schema:
            $ref: "#/components/schemas/DatabaseId"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tg_msg:
                  $ref: "#/components/schemas/TelegramMessage"
                rid:
                  type: integer
                  description: "Run id of the sent submission"
        required: true
      responses:
        '200':
          description: "OK"
        '404':
          description: "Submission with given ID not found"
  /submissions/{submission_id}/confirm/delete:
    put:
      summary: "Confirm that the message in Telegram with given submission was deleted"
      parameters:
        - in: path
          name: submission_id
          schema:
            $ref: "#/components/schemas/DatabaseId"
          required: true
      responses:
        '200':
          description: "OK"
        '404':
          description: "Submission with given ID not found"
  /submissions/{submission_id}/status:
    put:
      summary: "Update submission status"
      parameters:
        - in: path
          name: submission_id
          schema:
            $ref: "#/components/schemas/DatabaseId"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmissionStatus"
        required: true
      responses:
        '200':
          description: "OK"
        '404':
          description: "Submission with given ID not found"
  /submissions/{submission_id}/assignee:
    put:
      summary: "Update submission status"
      parameters:
        - in: path
          name: submission_id
          schema:
            $ref: "#/components/schemas/DatabaseId"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              description: "Telegram chat id with assigned reviewer"
        required: true
      responses:
        '200':
          description: "OK"
        '404':
          description: "Submission with given ID not found"
  /contests/{cid}/subscribe:
    put:
      summary: "Subscribe chat to contest"
      parameters:
        - in: path
          name: cid
          schema:
            type: "integer"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: "integer"
              description: "ID of Telegram chat to subscribe to contest"
      responses:
        '200':
          description: "OK"
  /contests/{cid}/unsubscribe:
    put:
      summary: "Unsubscribe chat from contest"
      parameters:
        - in: path
          name: cid
          schema:
            type: "integer"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: "integer"
              description: "ID of telegram chat where unsubscribe command was sent"
      responses:
        '200':
          description: "OK"
        '404':
          description: "There was no subscription on contest with given cid"
  /contests/all/unsubscribe:
    post:
      summary: "unsubscribe chat from all contests"
      requestBody:
        content:
          application/json:
            schema:
              type: "integer"
              description: "ID of telegram chat to unsubscribe"
      responses:
        '200':
          description: "OK"
